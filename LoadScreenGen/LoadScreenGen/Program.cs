using System;
using System.Collections.Generic;
using System.Linq;
using Mutagen.Bethesda;
using Mutagen.Bethesda.Synthesis;
using Mutagen.Bethesda.Skyrim;
using System.Threading.Tasks;
using System.IO;
using LoadScreenGen.Settings;

namespace LoadScreenGen {
    public class Program {


        public static string extraDataPath = "";
        public static IPatcherState<ISkyrimMod, ISkyrimModGetter>? state = null;

        static Lazy<MainSettings> _Settings = null!;
        public static MainSettings Settings => _Settings.Value;

        public static Task<int> Main(string[] args) {
            return SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetAutogeneratedSettings(
                    nickname: "Settings",
                    path: "settings.json",
                    out _Settings)
                .SetTypicalOpen(GameRelease.SkyrimLE, "YourPatcher.esp")
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state) {
            //Your code here!
            Program.extraDataPath = state.ExtraSettingsDataPath;
            Program.state = state;

            if(Directory.Exists(Settings.sourcePath)) {
                var imageArray = TextureGen.ProcessTextures(Settings.sourcePath, new string[] { Path.Combine(state.DataFolderPath, "textures", Settings.userSettings.defaultModFolder) }, new int[] { Settings.userSettings.imageResolution });
                MeshGen.Run(imageArray.ToList(), Path.Combine("textures", Settings.userSettings.defaultModFolder), extraDataPath, false, state.DataFolderPath);
                PluginGen.CreateEsp(state.PatchMod, imageArray, Settings.userSettings.defaultModFolder, "JLS_", true, Settings.userSettings.frequency, Settings.userSettings.loadScreenChoice);
            } else {
                Console.WriteLine("Source path does not exist.");
            }
        }
    }
}
